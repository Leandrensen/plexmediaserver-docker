version: "2"
services:

  #Plex
  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - VERSION=docker
      - UMASK_SET=022 #optional
      - PLEX_CLAIM= #optional
    volumes:
      - ${DIR_MEDIASERVER}/plex/config:/config
      - ${DIR_MEDIASERVER}/media/peliculas:/peliculas
      - ${DIR_MEDIASERVER}/media/series:/series
      - ${DIR_MEDIASERVER}/media/documentales:/documentales
      - ${DIR_MEDIASERVER}/media/anime:/anime
      - ${DIR_MEDIASERVER}/media/musica:/musica
    restart: unless-stopped

  #Searchers 
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
      - UMASK_SET=022 #optional
    volumes:
      - ${DIR_MEDIASERVER}/sonarr/config:/config
      - ${DIR_DOWNLOADS}:/downloads
      - ${DIR_MEDIASERVER}/media/series:/series
      - ${DIR_MEDIASERVER}/media/anime:/anime
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
      - UMASK_SET=022 #optional 
    volumes:
      - ${DIR_MEDIASERVER}/radarr/config:/config
      - ${DIR_DOWNLOADS}:/downloads 
      - ${DIR_MEDIASERVER}/media/peliculas:/peliculas
      - ${DIR_MEDIASERVER}/media/documentales:/documentales 
    ports:
      - 7878:7878
    restart: unless-stopped

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
      - UMASK_SET=022 #optional 
    volumes:
      - ${DIR_MEDIASERVER}/lidarr/config:/config
      - ${DIR_DOWNLOADS}:/downloads
      - ${DIR_MEDIASERVER}/media/musica:/musica
    ports:
      - 8686:8686
    restart: unless-stopped
  
  #Indexers
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
      - RUN_OPTS=run options here #optional
    volumes:
      - ${DIR_MEDIASERVER}/jackett/config:/config
      - ${DIR_MEDIASERVER}/jackett/torrentfiles:/downloads
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 9117:9117
    restart: unless-stopped

  #Statistics
  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
    volumes:
      - ${DIR_MEDIASERVER}/tautulli/config:/config
      - ${DIR_MEDIASERVER}/plex/config/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
    ports:
      - 8181:8181
    restart: unless-stopped

  #Requests
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
      - BASE_URL=/ombi #optional
    volumes:
      - ${DIR_MEDIASERVER}/ombi/config:/config
    ports:
      - 3579:3579
    restart: unless-stopped

  #Downloaders
  deluge:
    image: linuxserver/deluge
    container_name: deluge
    network_mode: host
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
      - UMASK_SET=022 #optional
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - ${DIR_MEDIASERVER}/deluge/config:/config
      - ${DIR_DOWNLOADS}:/downloads
      - ${DIR_MEDIASERVER}/jackett/torrentfiles:/torrentfiles
    ports:
      - 9000:9000
    restart: unless-stopped

  #Media File Organizer
  filebot:
    image: coppit/filebot
    container_name: filebot
    restart: always
    volumes:
      - ${DIR_MEDIASERVER}/filebot/config:/config
      - ${DIR_MEDIASERVER}/media:/output
      - ${DIR_DOWNLOADS}:/input
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
